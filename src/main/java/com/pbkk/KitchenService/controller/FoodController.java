package com.pbkk.KitchenService.controller;

import java.util.Map;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.pbkk.KitchenService.Repository.FoodRepository;
import com.pbkk.KitchenService.model.*;
import com.pbkk.KitchenServiceUtil.*;

@RestController
@RequestMapping("/kitchen/food")

public class FoodController {

	@Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
	private FoodRepository foodRepository;

	@ResponseBody
	@RequestMapping("")
	public Iterable<FoodModel> test() {
		return foodRepository.findAll();
	}
	
	@ResponseBody
	@RequestMapping("/{id_mstatus}")
	public Optional<FoodModel> getKitchen(@PathVariable("id_mstatus") Integer id) {
		return foodRepository.findById(id);
	}
	
	@ResponseBody
	@RequestMapping(value = "", method = RequestMethod.POST)
	public Map<String, Object> createFood(@RequestParam(value = "id_makanan") Integer id)
	{
		FoodModel f = new FoodModel();
		f.setId_makanan(id);
		f.setStatus(false);
		foodRepository.save(f);
		return Util.getSuccessResult();
	}
	
	@ResponseBody
	@RequestMapping(value = "", method = RequestMethod.PUT)
	public Map<String, Object> updateFoodName(
		@RequestParam(value = "id_mstatus") Integer id,
		@RequestParam(value = "makanan_status") Boolean status)
	{
		FoodModel f = foodRepository.findById(id).get();
		f.setStatus(status);
		foodRepository.save(f);
		return Util.getSuccessResult();
	}
	
	@ResponseBody
	@RequestMapping(value = "", method = RequestMethod.DELETE)
	public Map<String, Object> deleteStatus(@RequestParam(value = "id_mstatus") Integer id)
	{
		foodRepository.deleteById(id);
	    return Util.getSuccessResult();
	}
	
}