package com.pbkk.KitchenService.controller;

import java.util.Map;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.pbkk.KitchenService.Repository.KitchenRepository;
import com.pbkk.KitchenService.model.*;
import com.pbkk.KitchenServiceUtil.*;

@RestController
@RequestMapping("/kitchen/detail_order")

public class KitchenController {
	
	@Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
	private KitchenRepository kitchenRepository;

	@ResponseBody
	@RequestMapping("")
	public Iterable<KitchenModel> test() {
		return kitchenRepository.findAll();
	}
	
	@ResponseBody
	@RequestMapping("/{id_dostatus}")
	public Optional<KitchenModel> getKitchen(@PathVariable("id_dostatus") Integer id) {
		return kitchenRepository.findById(id);
	}	
	
	@ResponseBody
	@RequestMapping(value = "", method = RequestMethod.POST)
	public Map<String, Object> createStatus(@RequestParam(value = "id_detailorder") Integer id)
	{
		KitchenModel k = new KitchenModel();
		k.setId_detailorder(id);
		k.setStatus(false);
		kitchenRepository.save(k);
		return Util.getSuccessResult();
	}
	
	@ResponseBody
	@RequestMapping(value = "", method = RequestMethod.PUT)
	public Map<String, Object> updateUser(
		@RequestParam(value = "id_dostatus") Integer id,
		@RequestParam(value = "detailorder_status") Boolean status)
	{
		KitchenModel k = kitchenRepository.findById(id).get();
		k.setStatus(status);
		kitchenRepository.save(k);
		return Util.getSuccessResult();
	}
	
	@ResponseBody
	@RequestMapping(value = "", method = RequestMethod.DELETE)
	public Map<String, Object> deleteStatus(@RequestParam(value = "id_dostatus") Integer id)
	{
		kitchenRepository.deleteById(id);
	    return Util.getSuccessResult();
	}
	
}